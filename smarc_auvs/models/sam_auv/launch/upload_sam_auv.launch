<launch>
  <arg name="debug" default="0"/>

  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="-20"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <arg name="namespace" default="sam_auv"/>
  <arg name="navigation_on"/>
  <arg name="gazebo_env"/>
  <arg name="mode" default="default"/>
  <arg name="world_frame" default="world"/> <!-- This should actually be "/world". See https://github.com/ros-simulation/gazebo_ros_pkgs/pull/324 -->

  <group ns="$(arg namespace)">
    <param name="robot_description"
           command="$(find xacro)/xacro.py '$(find smarc_auvs)/models/sam_auv/robots/sam_auv_$(arg mode).urdf.xacro' debug:=$(arg debug) namespace:=$(arg namespace)" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description"/>

    <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->

    <!-- Publish robot model for ROS -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
      <param name="robot_description" value="/$(arg namespace)/robot_description" />
    </node>

  	<!-- Load joint controller configurations from YAML file to parameter server -->
  	<rosparam file="$(find smarc_auvs)/models/sam_auv/config/controllers.yaml" command="load"/>
    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint1_position_controller joint2_position_controller joint_state_controller"/>

  </group>

  <include file="$(find smarc_sensor_plugins_ros)/launch/waterfall.launch">
    <arg name="namespace" value="$(arg namespace)"/>
  </include>

</launch>
